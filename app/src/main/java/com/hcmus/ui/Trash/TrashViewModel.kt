package com.hcmus.ui.Trash

import android.net.Uri
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import com.hcmus.data.model.Trash
import com.hcmus.data.TrashFirestoreService

class TrashViewModel : ViewModel() {
    private val _trashList = MutableLiveData<List<Trash>>(emptyList())
    val trashList: LiveData<List<Trash>> = _trashList

    private val trashService = TrashFirestoreService()

    // üìå Th√™m ·∫£nh v√†o Trash + L∆∞u v√†o Firestore
    fun addToTrash(email: String, images: List<String>) {
        if (images.isEmpty()) return

        val newTrash = Trash(
            id = System.currentTimeMillis().toString(), // üîπ ƒê·∫£m b·∫£o ID l√† String
            images = images
        )

        trashService.addToTrash(email, newTrash) { // ‚úÖ B√¢y gi·ªù kh·ªõp v·ªõi ph∆∞∆°ng th·ª©c s·ª≠a ƒë·ªïi
            val currentTrashList = _trashList.value?.toMutableList() ?: mutableListOf()
            currentTrashList.add(newTrash)
            _trashList.value = currentTrashList
        }
    }

    // üìå T·∫£i danh s√°ch ·∫£nh t·ª´ Firestore
    fun loadTrashFromFirebase(email: String) {
        trashService.getTrash(email) { trashItems ->
            val decodedTrashItems = trashItems.map { trash ->
                Trash(images = trash.images.map { Uri.decode(it) }) // Gi·∫£i m√£ URL
            }
            _trashList.value = decodedTrashItems
        }
    }

    // üìå X√≥a ·∫£nh kh·ªèi Trash (khi kh√¥i ph·ª•c ho·∫∑c x√≥a vƒ©nh vi·ªÖn)
    fun removeFromTrash(email: String, trashId: String) {
        val currentTrashList = _trashList.value?.toMutableList() ?: return

        val targetTrash = currentTrashList.find { it.id.toString() == trashId }
        if (targetTrash != null) {
            trashService.deleteFromTrash(email, targetTrash.id) { // ‚úÖ Kh√¥ng c√≤n l·ªói type mismatch
                currentTrashList.remove(targetTrash)
                _trashList.value = currentTrashList
            }
        }
    }

    // üìå X√≥a ·∫£nh ƒë√£ h·∫øt h·∫°n (sau 30 ng√†y)
    fun clearExpiredItems(email: String) {
        trashService.clearExpiredTrash(email) {
            val currentTrashList = _trashList.value?.toMutableList()
            if (currentTrashList != null) {
                val validItems = currentTrashList.filterNot { it.isExpired() }
                _trashList.value = validItems
            }
        }
    }
}
